[{"categories":null,"content":"asd test ","date":"2022-09-15","objectID":"/posts/first_post/:0:0","tags":null,"title":"First_post","uri":"/posts/first_post/"},{"categories":["折腾"],"content":"基础hugo使用","date":"2022-09-13","objectID":"/posts/hugo/","tags":["hugo"],"title":"Hugo","uri":"/posts/hugo/"},{"categories":["折腾"],"content":"hugo 概述 类似于hexo，但是采用go，运行更快依赖少。 安装 安装较为简单，可以使用编译好的二进制文件 Releases · gohugoio/hugo (github.com) ","date":"2022-09-13","objectID":"/posts/hugo/:0:0","tags":["hugo"],"title":"Hugo","uri":"/posts/hugo/"},{"categories":["折腾"],"content":"docker安装 docker run -it \\ --name hugo \\ -v /root/data/hugo:/hugo \\ -p 15287:1313 \\ --restart=always \\ ubuntu apt update \u0026\u0026 apt install -y wget git \u0026\u0026 \\ wget https://ghproxy.com/https://github.com/gohugoio/hugo/releases/download/v0.102.3/hugo_0.102.3_Linux-64bit.deb \u0026\u0026 \\ dpkg -i hugo_0.102.3_Linux-64bit.deb \u0026\u0026 \\ rm hugo_0.102.3_Linux-64bit.deb 博客使用 ","date":"2022-09-13","objectID":"/posts/hugo/:1:0","tags":["hugo"],"title":"Hugo","uri":"/posts/hugo/"},{"categories":["折腾"],"content":"生成站点 使用Hugo快速生成站点，比如希望生成到 /path/to/site 路径： $ hugo new site /path/to/site hugo new site \u003cname of site\u003e -f yml 这样就在 /path/to/site 目录里生成了初始站点，进去目录： $ cd /path/to/site 站点目录结构： ▸ archetypes/ ▸ content/ ▸ layouts/ ▸ static/ config.toml ","date":"2022-09-13","objectID":"/posts/hugo/:2:0","tags":["hugo"],"title":"Hugo","uri":"/posts/hugo/"},{"categories":["折腾"],"content":"创建文章 创建一个 about 页面： $ hugo new about.md about.md 自动生成到了 content/about.md ，打开 about.md 看下： +++ date = \"2015-10-25T08:36:54-07:00\" draft = true title = \"about\" +++ 正文内容 内容是 Markdown 格式的，+++ 之间的内容是 TOML 格式的，根据你的喜好，你可以换成 YAML 格式（使用 --- 标记）或者 JSON 格式。 创建第一篇文章，放到 post 目录，方便之后生成聚合页面。 $ hugo new post/first.md 打开编辑 post/first.md ： --- date: \"2015-10-25T08:36:54-07:00\" title: \"first\" --- ### Hello Hugo 1. aaa 1. bbb 1. ccc ","date":"2022-09-13","objectID":"/posts/hugo/:3:0","tags":["hugo"],"title":"Hugo","uri":"/posts/hugo/"},{"categories":["折腾"],"content":"安装皮肤 到 皮肤列表 挑选一个心仪的皮肤，比如你觉得 Hyde 皮肤不错，找到相关的 GitHub 地址，创建目录 themes，在 themes 目录里把皮肤 git clone 下来： # 创建 themes 目录 $ cd themes $ git clone https://github.com/spf13/hyde.git 您可以用作子模块 git submodule add --depth=1 https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod git submodule update --init --recursive # needed when you reclone your repo (submodules may not get cloned automatically) 注意：如果您想坚持使用特定版本，则可以使用上述命令的结尾。\u003cspan\u003e \u003c/span\u003e--branch v5.0 更新主题 ： git submodule update --remote --merge adityatelange/hugo-PaperMod: A fast, clean, responsive Hugo theme. (github.com) git clone https://ghproxy.com/https://github.com/adityatelange/hugo-PaperMod themes/PaperMod --depth=1 dillonzq/LoveIt: ❤️A clean, elegant but advanced blog theme for Hugo 一个简洁、优雅且高效的 Hugo 主题 (github.com) git clone https://ghproxy.com/https://github.com/dillonzq/LoveIt.git git clone https://ghproxy.com/https://github.com/dillonzq/LoveIt.git themes/LoveIt git submodule add --depth=1 https://ghproxy.com/https://github.com/dillonzq/LoveIt.git themes/LoveIt hugo server -e production --source=exampleSite ","date":"2022-09-13","objectID":"/posts/hugo/:4:0","tags":["hugo"],"title":"Hugo","uri":"/posts/hugo/"},{"categories":["折腾"],"content":"运行Hugo 在你的站点根目录执行 Hugo 命令进行调试： hugo server --theme=hyde --buildDrafts hugo serve -e production --disableFastRender （注明：v0.15 版本之后，不再需要使用 --watch 参数了） 浏览器里打开： http://localhost:1313 配置文件 ","date":"2022-09-13","objectID":"/posts/hugo/:5:0","tags":["hugo"],"title":"Hugo","uri":"/posts/hugo/"},{"categories":["折腾"],"content":"正在使用 baseURL = 'https://FlashAWing.github.io/' title = '标签页标题' theme = \"LoveIt\" defaultContentLanguage = 'zh-cn' languageCode = 'zh-CN' languageName = \"简体中文\" # 是否包括中日韩文字 hasCJKLanguage = true # 默认每页列表显示的文章数目 paginate = 12 # 是否使用 robots.txt enableRobotsTXT = true # 是否使用 git 信息 enableGitInfo = true # 是否使用 emoji 代码 enableEmoji = true # 忽略一些构建错误 ignoreErrors = [\"error-remote-getjson\", \"error-missing-instagram-accesstoken\"] [author] name = \"Wing\" email = \"838264864@qq.com\" link = \"\" [menu] [[menu.main]] weight = 1 identifier = \"posts\" # 你可以在名称 (允许 HTML 格式) 之前添加其他信息, 例如图标 pre = \"\" # 你可以在名称 (允许 HTML 格式) 之后添加其他信息, 例如图标 post = \"\" name = \"文章\" url = \"/posts/\" # 当你将鼠标悬停在此菜单链接上时, 将显示的标题 title = \"\" [[menu.main]] weight = 2 identifier = \"tags\" pre = \"\" post = \"\" name = \"标签\" url = \"/tags/\" title = \"\" [[menu.main]] weight = 3 identifier = \"categories\" pre = \"\" post = \"\" name = \"分类\" url = \"/categories/\" title = \"\" [markup] # 语法高亮设置 (https://gohugo.io/content-management/syntax-highlighting) [markup.highlight] # false 是必要的设置 (https://github.com/dillonzq/LoveIt/issues/158) noClasses = false [params] # 网站默认主题样式 [\"auto\", \"light\", \"dark\"] defaultTheme = \"auto\" # 公共 git 仓库路径，仅在 enableGitInfo 设为 true 时有效 gitRepo = \"\" # LoveIt 新增 | 0.1.1 哪种哈希函数用来 SRI, 为空时表示不使用 SRI # [\"sha256\", \"sha384\", \"sha512\", \"md5\"] fingerprint = \"\" # LoveIt 新增 | 0.2.0 日期格式 dateFormat = \"2006-01-02\" # 网站标题, 用于 Open Graph 和 Twitter Cards title = \"用于描述\" # 网站描述, 用于 RSS, SEO, Open Graph 和 Twitter Cards description = \"用于描述\" # 网站图片, 用于 Open Graph 和 Twitter Cards # images = [\"/logo.png\"] # 页面头部导航栏配置 [params.header] # 桌面端导航栏模式 [\"fixed\", \"normal\", \"auto\"] desktopMode = \"fixed\" # 移动端导航栏模式 [\"fixed\", \"normal\", \"auto\"] mobileMode = \"auto\" # LoveIt 新增 | 0.2.0 页面头部导航栏标题配置 [params.header.title] # LOGO 的 URL logo = \"\" # 标题名称 name = \"左上角标题名稱\" # 你可以在名称 (允许 HTML 格式) 之前添加其他信息, 例如图标 pre = \"\" # 你可以在名称 (允许 HTML 格式) 之后添加其他信息, 例如图标 post = \"\" # LoveIt 新增 | 0.2.5 是否为标题显示打字机动画 typeit = false # 页面底部信息配置 [params.footer] enable = true # LoveIt 新增 | 0.2.0 自定义内容 (支持 HTML 格式) custom = '最下居中一行' # LoveIt 新增 | 0.2.0 是否显示 Hugo 和主题信息 hugo = true # LoveIt 新增 | 0.2.0 是否显示版权信息 copyright = true # LoveIt 新增 | 0.2.0 是否显示作者 author = true # 网站创立年份 since = 2019 # ICP 备案信息，仅在中国使用 (支持 HTML 格式) icp = \"\" # 许可协议信息 (支持 HTML 格式) license = '\u003ca rel=\"license external nofollow noopener noreffer\" href=\"https://creativecommons.org/licenses/by-nc/4.0/\" target=\"_blank\"\u003eCC BY-NC 4.0\u003c/a\u003e' # LoveIt 新增 | 0.2.0 Section (所有文章) 页面配置 [params.section] # section 页面每页显示文章数量 paginate = 20 # 日期格式 (月和日) dateFormat = \"01-02\" # RSS 文章数目 rss = 10 # LoveIt 新增 | 0.2.0 List (目录或标签) 页面配置 [params.list] # list 页面每页显示文章数量 paginate = 20 # 日期格式 (月和日) dateFormat = \"01-02\" # RSS 文章数目 rss = 10 # LoveIt 新增 | 0.2.0 应用图标配置 [params.app] # 当添加到 iOS 主屏幕或者 Android 启动器时的标题, 覆盖默认标题 title = \"我的网站\" # 是否隐藏网站图标资源链接 noFavicon = false # 更现代的 SVG 网站图标, 可替代旧的 .png 和 .ico 文件 svgFavicon = \"\" # Android 浏览器主题色 themeColor = \"#ffffff\" # Safari 图标颜色 iconColor = \"#5bbad5\" # Windows v8-10磁贴颜色 tileColor = \"#da532c\" # LoveIt 新增 | 0.2.0 搜索配置 [params.search] enable = true # 搜索引擎的类型 [\"lunr\", \"algolia\"] type = \"lunr\" # 文章内容最长索引长度 contentLength = 4000 # 搜索框的占位提示语 placeholder = \"\" # LoveIt 新增 | 0.2.1 最大结果数目 maxResultLength = 10 # LoveIt 新增 | 0.2.3 结果内容片段长度 snippetLength = 50 # LoveIt 新增 | 0.2.1 搜索结果中高亮部分的 HTML 标签 highlightTag = \"em\" # LoveIt 新增 | 0.2.4 是否在搜索索引中使用基于 baseURL 的绝对路径 absoluteURL = false [params.search.algolia] index = \"\" appID = \"\" searchKey = \"\" # 主页配置 [params.home] # LoveIt 新增 | 0.2.0 RSS 文章数目 rss = 10 # 主页个人信息 [params.home.profile] enable = true # Gravatar 邮箱，用于优先在主页显示的头像 gravatarEmail = \"838264864@qq.com\" # 主页显示头像的 URL avatarURL = \"/images/avatar.png\" # LoveIt 更改 | 0.2.7 主页显示的网站标题 (支持 HTML 格式) title = \"人名？\" # 主页显示的网站副标题 (允许 HTML 格式) subtitle = \"这是副标题\" # 是否为副标题显示打字机动画 typeit = true # 是否显示社交账号 social = true # LoveIt 新增 | 0.2.0 免责声明 (支持 HTML 格式) disclaimer = \"\" # 主页文章列表 [params.home.posts] enable = true # 主页每页显示文章数量 paginate = 6 # LoveIt 删除 | 0.2.0 被 params.page 中的 hiddenFromHomePage 替代 # 当你没有在","date":"2022-09-13","objectID":"/posts/hugo/:6:0","tags":["hugo"],"title":"Hugo","uri":"/posts/hugo/"},{"categories":["折腾"],"content":"基础配置 ","date":"2022-09-13","objectID":"/posts/hugo/:7:0","tags":["hugo"],"title":"Hugo","uri":"/posts/hugo/"},{"categories":["折腾"],"content":"toml baseURL = \"http://example.org/\" # 更改使用 Hugo 构建网站时使用的默认主题 theme = \"LoveIt\" # 网站标题 title = \"我的全新 Hugo 网站\" # 网站语言, 仅在这里 CN 大写 [\"en\", \"zh-CN\", \"fr\", \"pl\", ...] languageCode = \"zh-CN\" # 语言名称 [\"English\", \"简体中文\", \"Français\", \"Polski\", ...] languageName = \"简体中文\" # 是否包括中日韩文字 hasCJKLanguage = true # 作者配置 [author] name = \"xxxx\" email = \"\" link = \"\" # 菜单配置 [menu] [[menu.main]] weight = 1 identifier = \"posts\" # 你可以在名称 (允许 HTML 格式) 之前添加其他信息, 例如图标 pre = \"\" # 你可以在名称 (允许 HTML 格式) 之后添加其他信息, 例如图标 post = \"\" name = \"文章\" url = \"/posts/\" # 当你将鼠标悬停在此菜单链接上时, 将显示的标题 title = \"\" [[menu.main]] weight = 2 identifier = \"tags\" pre = \"\" post = \"\" name = \"标签\" url = \"/tags/\" title = \"\" [[menu.main]] weight = 3 identifier = \"categories\" pre = \"\" post = \"\" name = \"分类\" url = \"/categories/\" title = \"\" # Hugo 解析文档的配置 [markup] # 语法高亮设置 (https://gohugo.io/content-management/syntax-highlighting) [markup.highlight] # false 是必要的设置 (https://github.com/dillonzq/LoveIt/issues/158) noClasses = false ","date":"2022-09-13","objectID":"/posts/hugo/:7:1","tags":["hugo"],"title":"Hugo","uri":"/posts/hugo/"},{"categories":["折腾"],"content":"yaml baseURL: http://example.org/ theme: LoveIt title: 我的全新 Hugo 网站 languageCode: zh-CN languageName: 简体中文 hasCJKLanguage: true author: name: xxxx email: \"\" link: \"\" menu: main: - weight: 1 identifier: posts pre: \"\" post: \"\" name: 文章 url: /posts/ title: \"\" - weight: 2 identifier: tags pre: \"\" post: \"\" name: 标签 url: /tags/ title: \"\" - weight: 3 identifier: categories pre: \"\" post: \"\" name: 分类 url: /categories/ title: \"\" markup: highlight: noClasses: false ","date":"2022-09-13","objectID":"/posts/hugo/:7:2","tags":["hugo"],"title":"Hugo","uri":"/posts/hugo/"},{"categories":["折腾"],"content":"完整配置 ","date":"2022-09-13","objectID":"/posts/hugo/:8:0","tags":["hugo"],"title":"Hugo","uri":"/posts/hugo/"},{"categories":["折腾"],"content":"toml baseURL = \"http://example.org/\" # 更改使用 Hugo 构建网站时使用的默认主题 theme = \"LoveIt\" # 网站标题 title = \"我的全新 Hugo 网站\" defaultContentLanguage = 'zh-cn' # 网站语言, 仅在这里 CN 大写 [\"en\", \"zh-CN\", \"fr\", \"pl\", ...] languageCode = \"zh-CN\" # 语言名称 [\"English\", \"简体中文\", \"Français\", \"Polski\", ...] languageName = \"简体中文\" # 是否包括中日韩文字 hasCJKLanguage = true # 默认每页列表显示的文章数目 paginate = 12 # 谷歌分析代号 [UA-XXXXXXXX-X] googleAnalytics = \"\" # 版权描述，仅仅用于 SEO copyright = \"\" # 是否使用 robots.txt enableRobotsTXT = true # 是否使用 git 信息 enableGitInfo = true # 是否使用 emoji 代码 enableEmoji = true # 忽略一些构建错误 ignoreErrors = [\"error-remote-getjson\", \"error-missing-instagram-accesstoken\"] # 作者配置 [author] name = \"xxxx\" email = \"\" link = \"\" # 菜单配置 [menu] [[menu.main]] weight = 1 identifier = \"posts\" # 你可以在名称 (允许 HTML 格式) 之前添加其他信息, 例如图标 pre = \"\" # 你可以在名称 (允许 HTML 格式) 之后添加其他信息, 例如图标 post = \"\" name = \"文章\" url = \"/posts/\" # 当你将鼠标悬停在此菜单链接上时, 将显示的标题 title = \"\" [[menu.main]] weight = 2 identifier = \"tags\" pre = \"\" post = \"\" name = \"标签\" url = \"/tags/\" title = \"\" [[menu.main]] weight = 3 identifier = \"categories\" pre = \"\" post = \"\" name = \"分类\" url = \"/categories/\" title = \"\" [params] # 网站默认主题样式 [\"auto\", \"light\", \"dark\"] defaultTheme = \"auto\" # 公共 git 仓库路径，仅在 enableGitInfo 设为 true 时有效 gitRepo = \"\" # 哪种哈希函数用来 SRI, 为空时表示不使用 SRI # [\"sha256\", \"sha384\", \"sha512\", \"md5\"] fingerprint = \"\" # 日期格式 dateFormat = \"2006-01-02\" # 网站标题, 用于 Open Graph 和 Twitter Cards title = \"我的网站\" # 网站描述, 用于 RSS, SEO, Open Graph 和 Twitter Cards description = \"这是我的全新 Hugo 网站\" # 网站图片, 用于 Open Graph 和 Twitter Cards images = [\"/logo.png\"] # 页面头部导航栏配置 [params.header] # 桌面端导航栏模式 [\"fixed\", \"normal\", \"auto\"] desktopMode = \"fixed\" # 移动端导航栏模式 [\"fixed\", \"normal\", \"auto\"] mobileMode = \"auto\" # 页面头部导航栏标题配置 [params.header.title] # LOGO 的 URL logo = \"\" # 标题名称 name = \"\" # 你可以在名称 (允许 HTML 格式) 之前添加其他信息, 例如图标 pre = \"\" # 你可以在名称 (允许 HTML 格式) 之后添加其他信息, 例如图标 post = \"\" # 是否为标题显示打字机动画 typeit = false # 页面底部信息配置 [params.footer] enable = true # 自定义内容 (支持 HTML 格式) custom = '' # 是否显示 Hugo 和主题信息 hugo = true # 是否显示版权信息 copyright = true # 是否显示作者 author = true # 网站创立年份 since = 2019 # ICP 备案信息，仅在中国使用 (支持 HTML 格式) icp = \"\" # 许可协议信息 (支持 HTML 格式) license = '\u003ca rel=\"license external nofollow noopener noreffer\" href=\"https://creativecommons.org/licenses/by-nc/4.0/\" target=\"_blank\"\u003eCC BY-NC 4.0\u003c/a\u003e' # Section (所有文章) 页面配置 [params.section] # section 页面每页显示文章数量 paginate = 20 # 日期格式 (月和日) dateFormat = \"01-02\" # RSS 文章数目 rss = 10 # List (目录或标签) 页面配置 [params.list] # list 页面每页显示文章数量 paginate = 20 # 日期格式 (月和日) dateFormat = \"01-02\" # RSS 文章数目 rss = 10 # 应用图标配置 [params.app] # 当添加到 iOS 主屏幕或者 Android 启动器时的标题, 覆盖默认标题 title = \"我的网站\" # 是否隐藏网站图标资源链接 noFavicon = false # 更现代的 SVG 网站图标, 可替代旧的 .png 和 .ico 文件 svgFavicon = \"\" # Android 浏览器主题色 themeColor = \"#ffffff\" # Safari 图标颜色 iconColor = \"#5bbad5\" # Windows v8-10磁贴颜色 tileColor = \"#da532c\" # 搜索配置 [params.search] enable = true # 搜索引擎的类型 [\"lunr\", \"algolia\"] type = \"lunr\" # 文章内容最长索引长度 contentLength = 4000 # 搜索框的占位提示语 placeholder = \"\" # 最大结果数目 maxResultLength = 10 # 结果内容片段长度 snippetLength = 50 # 搜索结果中高亮部分的 HTML 标签 highlightTag = \"em\" # 是否在搜索索引中使用基于 baseURL 的绝对路径 absoluteURL = false [params.search.algolia] index = \"\" appID = \"\" searchKey = \"\" # 主页配置 [params.home] # RSS 文章数目 rss = 10 # 主页个人信息 [params.home.profile] enable = true # Gravatar 邮箱，用于优先在主页显示的头像 gravatarEmail = \"\" # 主页显示头像的 URL avatarURL = \"/images/avatar.png\" # 主页显示的网站标题 (支持 HTML 格式) title = \"\" # 主页显示的网站副标题 (允许 HTML 格式) subtitle = \"这是我的全新 Hugo 网站\" # 是否为副标题显示打字机动画 typeit = true # 是否显示社交账号 social = true # 免责声明 (支持 HTML 格式) disclaimer = \"\" # 主页文章列表 [params.home.posts] enable = true # 主页每页显示文章数量 paginate = 6 # 被 params.page 中的 hiddenFromHomePage 替代 # 当你没有在文章前置参数中设置 \"hiddenFromHomePage\" 时的默认行为 defaultHiddenFromHomePage = false # 作者的社交信息设置 [params.social] GitHub = \"xxxx\" Linkedin = \"\" Twitter = \"xxxx\" Instagram = \"xxxx\" Facebook = \"xxxx\" Telegram = \"xxxx\" Medium = \"\" Gitlab = \"\" Youtubelegacy = \"\" Youtubecustom = \"\" Youtubechannel = \"\" Tumblr = \"\" Quora = \"\" Keybase = \"\" Pinterest = \"\" Reddit ","date":"2022-09-13","objectID":"/posts/hugo/:8:1","tags":["hugo"],"title":"Hugo","uri":"/posts/hugo/"},{"categories":["折腾"],"content":"yaml baseURL: http://example.org/ theme: LoveIt title: 我的全新 Hugo 网站 defaultContentLanguage: zh-cn languageCode: zh-CN languageName: 简体中文 hasCJKLanguage: true paginate: 12 googleAnalytics: \"\" copyright: \"\" enableRobotsTXT: true enableGitInfo: true enableEmoji: true ignoreErrors: - error-remote-getjson - error-missing-instagram-accesstoken author: name: xxxx email: \"\" link: \"\" menu: main: - weight: 1 identifier: posts pre: \"\" post: \"\" name: 文章 url: /posts/ title: \"\" - weight: 2 identifier: tags pre: \"\" post: \"\" name: 标签 url: /tags/ title: \"\" - weight: 3 identifier: categories pre: \"\" post: \"\" name: 分类 url: /categories/ title: \"\" params: defaultTheme: auto gitRepo: \"\" fingerprint: \"\" dateFormat: 2006-01-02 title: 我的网站 description: 这是我的全新 Hugo 网站 images: - /logo.png header: desktopMode: fixed mobileMode: auto title: logo: \"\" name: \"\" pre: \"\" post: \"\" typeit: false footer: enable: true custom: \"\" hugo: true copyright: true author: true since: 2019 icp: \"\" license: \u003ca rel=\"license external nofollow noopener noreffer\" href=\"https://creativecommons.org/licenses/by-nc/4.0/\" target=\"_blank\"\u003eCC BY-NC 4.0\u003c/a\u003e section: paginate: 20 dateFormat: 01-02 rss: 10 list: paginate: 20 dateFormat: 01-02 rss: 10 app: title: 我的网站 noFavicon: false svgFavicon: \"\" themeColor: \"#ffffff\" iconColor: \"#5bbad5\" tileColor: \"#da532c\" search: enable: true type: lunr contentLength: 4000 placeholder: \"\" maxResultLength: 10 snippetLength: 50 highlightTag: em absoluteURL: false algolia: index: \"\" appID: \"\" searchKey: \"\" home: rss: 10 profile: enable: true gravatarEmail: \"\" avatarURL: /images/avatar.png title: \"\" subtitle: 这是我的全新 Hugo 网站 typeit: true social: true disclaimer: \"\" posts: enable: true paginate: 6 defaultHiddenFromHomePage: false social: GitHub: xxxx Linkedin: \"\" Twitter: xxxx Instagram: xxxx Facebook: xxxx Telegram: xxxx Medium: \"\" Gitlab: \"\" Youtubelegacy: \"\" Youtubecustom: \"\" Youtubechannel: \"\" Tumblr: \"\" Quora: \"\" Keybase: \"\" Pinterest: \"\" Reddit: \"\" Codepen: \"\" FreeCodeCamp: \"\" Bitbucket: \"\" Stackoverflow: \"\" Weibo: \"\" Odnoklassniki: \"\" VK: \"\" Flickr: \"\" Xing: \"\" Snapchat: \"\" Soundcloud: \"\" Spotify: \"\" Bandcamp: \"\" Paypal: \"\" Fivehundredpx: \"\" Mix: \"\" Goodreads: \"\" Lastfm: \"\" Foursquare: \"\" Hackernews: \"\" Kickstarter: \"\" Patreon: \"\" Steam: \"\" Twitch: \"\" Strava: \"\" Skype: \"\" Whatsapp: \"\" Zhihu: \"\" Douban: \"\" Angellist: \"\" Slidershare: \"\" Jsfiddle: \"\" Deviantart: \"\" Behance: \"\" Dribbble: \"\" Wordpress: \"\" Vine: \"\" Googlescholar: \"\" Researchgate: \"\" Mastodon: \"\" Thingiverse: \"\" Devto: \"\" Gitea: \"\" XMPP: \"\" Matrix: \"\" Bilibili: \"\" Discord: \"\" DiscordInvite: \"\" Lichess: \"\" ORCID: \"\" Pleroma: \"\" Kaggle: \"\" MediaWiki: \"\" Plume: \"\" HackTheBox: \"\" RootMe: \"\" Phone: \"\" Email: xxxx@xxxx.com RSS: true page: hiddenFromHomePage: false hiddenFromSearch: false twemoji: false lightgallery: false ruby: true fraction: true fontawesome: true linkToMarkdown: true rssFullText: false toc: enable: true keepStatic: true auto: true code: copy: true maxShownLines: 50 math: enable: true inlineLeftDelimiter: \"\" inlineRightDelimiter: \"\" blockLeftDelimiter: \"\" blockRightDelimiter: \"\" copyTex: true mhchem: true mapbox: accessToken: \"\" lightStyle: mapbox://styles/mapbox/light-v10?optimize=true darkStyle: mapbox://styles/mapbox/dark-v10?optimize=true navigation: true geolocate: true scale: true fullscreen: true share: enable: true Twitter: true Facebook: true Linkedin: false Whatsapp: false Pinterest: false Tumblr: false HackerNews: true Reddit: false VK: false Buffer: false Xing: false Line: true Instapaper: false Pocket: false Flipboard: false Weibo: true Blogger: false Baidu: false Odnoklassniki: false Evernote: false Skype: false Trello: false Mix: false comment: enable: false disqus: enable: false shortname: \"\" gitalk: enable: false owner: \"\" repo: \"\" clientId: \"\" clientSecret: \"\" valine: enable: false appId: \"\" appKey: \"\" placeholder: \"\" avatar: mp meta: \"\" pageSize: 10 lang: \"\" visitor: true recordIP: true highlight: true enableQQ: false serverURLs: \"\" emoji: \"\" facebook: enabl","date":"2022-09-13","objectID":"/posts/hugo/:8:2","tags":["hugo"],"title":"Hugo","uri":"/posts/hugo/"},{"categories":["折腾"],"content":"生成 SSH 密钥 ssh-keygen -f ~/.ssh/blog_deploy_key 再将公钥 ~/.ssh/blog_deploy_key.pub 的内容添加到 VPS 的 ~/.ssh/authorized_keys 中，将私钥 ~/.ssh/blog_deploy_key 的内容添加到 GitHub 仓库的 Settings -\u003e Secrets 中并命名为 BLOG_DEPLOY_KEY。此后就可以在工作流中以环境变量${{secrets.BLOG_DEPLOY_KEY}} 的形式使用私钥，而不需要将私钥内容直接贴在工作流中啦。 name: github pages on: push: branches: - main # Set a branch to deploy pull_request: jobs: deploy: runs-on: ubuntu-latest concurrency: group: ${{ github.workflow }}-${{ github.ref }} steps: - uses: actions/checkout@v3 with: submodules: true # Fetch Hugo themes (true OR recursive) fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: 'latest' extended: true - name: Build run: hugo --minify - name: Deploy uses: peaceiris/actions-gh-pages@v3 with: deploy_key: ${{ secrets.BLOG_DEPLOY_KEY }} external_repository: FlashAWing/FlashAWing.github.io publish_branch: main # default: gh-pages publish_dir: ./public 文章写作 ","date":"2022-09-13","objectID":"/posts/hugo/:9:0","tags":["hugo"],"title":"Hugo","uri":"/posts/hugo/"},{"categories":["折腾"],"content":"2 前置参数 Hugo 允许你在文章内容前面添加 yaml, toml 或者 json 格式的前置参数. 注意 不是所有的以下前置参数都必须在你的每篇文章中设置. 只有在文章的参数和你的 网站设置 中的 page 部分不一致时才有必要这么做. 这是一个前置参数例子: --- title: \"我的第一篇文章\" subtitle: \"\" date: 2020-03-04T15:58:26+08:00 lastmod: 2020-03-04T15:58:26+08:00 draft: true author: \"\" authorLink: \"\" description: \"\" license: \"\" images: [] tags: [] categories: [] featuredImage: \"\" featuredImagePreview: \"\" hiddenFromHomePage: false hiddenFromSearch: false twemoji: false lightgallery: true ruby: true fraction: true fontawesome: true linkToMarkdown: true rssFullText: false toc: enable: true auto: true code: copy: true maxShownLines: 50 math: enable: false # ... mapbox: # ... share: enable: true # ... comment: enable: true # ... library: css: # someCSS = \"some.css\" # 位于 \"assets/\" # 或者 # someCSS = \"https://cdn.example.com/some.css\" js: # someJS = \"some.js\" # 位于 \"assets/\" # 或者 # someJS = \"https://cdn.example.com/some.js\" seo: images: [] # ... --- title: 文章标题. subtitle: 文章副标题. date: 这篇文章创建的日期时间. 它通常是从文章的前置参数中的 date 字段获取的, 但是也可以在 网站配置 中设置. lastmod: 上次修改内容的日期时间. draft: 如果设为 true, 除非 hugo 命令使用了 --buildDrafts/-D 参数, 这篇文章不会被渲染. author: 文章作者. authorLink: 文章作者的链接. description: 文章内容的描述. license: 这篇文章特殊的许可. images: 页面图片, 用于 Open Graph 和 Twitter Cards. tags: 文章的标签. categories: 文章所属的类别. featuredImage: 文章的特色图片. featuredImagePreview: 用在主页预览的文章特色图片. hiddenFromHomePage: 如果设为 true, 这篇文章将不会显示在主页上. hiddenFromSearch: 如果设为 true, 这篇文章将不会显示在搜索结果中. twemoji: 如果设为 true, 这篇文章会使用 twemoji. lightgallery: 如果设为 true, 文章中的图片将可以按照画廊形式呈现. ruby: 如果设为 true, 这篇文章会使用 上标注释扩展语法. fraction: 如果设为 true, 这篇文章会使用 分数扩展语法. fontawesome: 如果设为 true, 这篇文章会使用 Font Awesome 扩展语法. linkToMarkdown: 如果设为 true, 内容的页脚将显示指向原始 Markdown 文件的链接. rssFullText: 如果设为 true, 在 RSS 中将会显示全文内容. toc: 和 网站配置 中的 params.page.toc 部分相同. code: 和 网站配置 中的 params.page.code 部分相同. math: 和 网站配置 中的 params.page.math 部分相同. mapbox: 和 网站配置 中的 params.page.mapbox 部分相同. share: 和 网站配置 中的 params.page.share 部分相同. comment: 和 网站配置 中的 params.page.comment 部分相同. library: 和 网站配置 中的 params.page.library 部分相同. seo: 和 网站配置 中的 params.page.seo 部分相同. 技巧 featuredImage 和 featuredImagePreview 支持本地资源引用的完整用法. 如果带有在前置参数中设置了 name: featured-image 或 name: featured-image-preview 属性的页面资源, 没有必要在设置 featuredImage 或 featuredImagePreview: resources: - name: featured-image src: featured-image.jpg - name: featured-image-preview src: featured-image-preview.jpg ","date":"2022-09-13","objectID":"/posts/hugo/:10:0","tags":["hugo"],"title":"Hugo","uri":"/posts/hugo/"},{"categories":["折腾"],"content":"admonition admonition shortcode 支持 12 种 帮助你在页面中插入提示的横幅. 支持 Markdown 或者 HTML 格式. 注意 一个 注意 横幅 摘要 一个 摘要 横幅 信息 一个 信息 横幅 技巧 一个 技巧 横幅 成功 一个 成功 横幅 问题 一个 问题 横幅 警告 一个 警告 横幅 失败 一个 失败 横幅 危险 一个 危险 横幅 Bug 一个 Bug 横幅 示例 一个 示例 横幅 引用 一个 引用 横幅 admonition shortcode 有以下命名参数: type [可选] (第一个位置参数) admonition 横幅的类型, 默认值是 note. title [可选] (第二个位置参数) admonition 横幅的标题, 默认值是 type 参数的值. open [可选] (第三个位置参数) 横幅内容是否默认展开, 默认值是 true. 一个 admonition 示例: {{\u003c admonition type=tip title=\"This is a tip\" open=false \u003e}} 一个 **技巧** 横幅 {{\u003c /admonition \u003e}} 或者 {{\u003c admonition tip \"This is a tip\" false \u003e}} 一个 **技巧** 横幅 {{\u003c /admonition \u003e}} 呈现的输出效果如下: This is a tip 一个 技巧 横幅 ","date":"2022-09-13","objectID":"/posts/hugo/:11:0","tags":["hugo"],"title":"Hugo","uri":"/posts/hugo/"}]